<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonDashBoard.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAABDxJREFUaEPt
        WV1oFFcUjtW2UrTGUrG19odCfZFqq7UvoiKt0h/ah0KgNbIzu5F9ENo+9CEgCAt90RepgsK6MxMq4kNa
        ClVKiy/1wfShRB+kAc1m584atRhJ8ZckGrP9zt1vs2t2d7q72SRTmQ8OO3O/c8+5353ZMzP3toSoAVFH
        bTFsb9C03R/jycwSNv+PkMvNg4BvDNt9YNoqJ4bzdCTlrqFH8BGzLy7GoH+ggHHD8b7Fbw/P74Frp2tw
        EbMz75iOynLQ18wud5O0t3Xn5qN9H9om8px3LJ689ozuFDRgpjswyBGK6InZl1eQmgRutU/B3RSfqK3O
        x5zs66TmHm3dfU9hUEkKyMnMJxK/LyBdhsjRzCr4/EX/YdNSH5CaO5hd6jUMqpeDumta3g5Svth9uG+R
        6Xjd7DeRF597gvTswky523A73dCDsdRAzHbXkqoNqGzo9zX632eMX3YcyS4lO/OQmUPiBGxcBoDb6qf2
        4+lnSdcNw3I3I87fWowUiq7MBlIzB9xKrUh2Uie11UPMYqfMLOmGEfl+8CVMyB+MOyKFg1TzgZl6E0n6
        mWw4YnsfkmoKvjyUfhpiDjK+XOmkFBLSzQFm/nPM0h0m+TPqDLxMqumIOu5O5Linc0khQUEh1TimllbD
        8lIIvJD0jAE53kK+jM6JgoLnz3ZS9UMeaHjZO0sRY4aj4qRmBR3W4HPI+yvzS2FJ1F2iDSv7HjoOMYgy
        Utn1pGYX+RLdiTE8lLHg6pySgkPWB+w4+dbqqNPx5KXnyc4ZzC7vI4zlH05svxQeUuWQ74WopX7Wzpbu
        kJCXPdJzjkgy8wrG1EcxYzCTVBHG0exqEBfphEuoRkgFCjE7GymMUaysRKPRI1moFHdIVYUEkP9Oswy3
        yxsMXRX44vyC4zxX/Gjz9pCW12vloEId33Xi+vJahXRY7qsM2iz7jaGroijEO4YH8lYc95iW+wnpIuQZ
        IY51ChnVD65GzVaXGKcuIWyqjIaE4M2XTQ2BpT4UUhGhkGkgFOKHUMg0EArxQyhkGgiF+CEUMg2EQvwQ
        CvGB7InsSqVX8rQMgRcST/Y+WbIEOhRzMu+TegSBFiJXACIKi9IFG8fn9N6pi2yBFWKmvM/Qfotx0hHL
        exs+xX0QW51BnhfoHjwhJbdSfsPT8bpL901kYxTtVzVnqysQsFHaAyVkZ9J7Ecdn8kkw87gClfZNok56
        memo0/kc7gP4dQZHSH4ps7AuVvVPXYBcOfT5jv56d5fHzRcCG5XV90om+xfiOylk0tyzsvOkA9UA03Lb
        0O92SQwtRJZGK+XVJtsa2vc/hMjqIRz1yrePXRXfEiEThqUOyEzrIHVAb1Xb6gLjaCEY7Mc8r2qyoKgD
        +AHKv5I11apmqf3iRyHDklh3bBAlW25aiKy0l+Wcao63TnduBnAbttayXlsrIpb7Lg9DPAZoafkXlnel
        XbeJpOgAAAAASUVORK5CYII=
</value>
  </data>
</root>